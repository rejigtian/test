apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'tinker-support.gradle'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    ext.kotlin_version = '1.3.50'
    defaultConfig {
        applicationId "com.example.test"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.0.1"
        ndk {
            abiFilters 'armeabi-v7a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        releaseKeyStore {
            storeFile file("rejig_key.keystore")
            storePassword "rejigtian"
            keyAlias "test"
            keyPassword "rejigtian"
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseKeyStore
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.releaseKeyStore
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets{

        main {
            //jni库的调用会到资源文件夹下libs里面找so文件
            jniLibs.srcDirs = ['libs']

        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (!variant.buildType.isDebuggable()) {
                variant.packageApplicationProvider.get().outputDirectory = new File(project.rootDir.absolutePath + "/official/release")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation project(path: ':Emojilib')
    implementation project(path: ':hotfix')
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation "com.egame.vap:animplayer:2.0.10"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //kotlin-reflect
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    //kotlin -coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    compile "com.android.support:multidex:1.0.3" // 多dex配置
    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    compile 'com.tencent.bugly:crashreport_upgrade:1.5.0'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    compile 'com.tencent.tinker:tinker-android-lib:1.9.14.10'
    compile 'com.tencent.bugly:nativecrashreport:3.7.700' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

}